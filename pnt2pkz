#! /usr/bin/env python
"""
pnt-to-pkz [OPTIONS] { FILE.pnt [ ... ] | DIR }

Convert one or more .pnt files to the much smaller .pnz format.  If a
directory is given as the (single) argument, convert every .pnt file
in that directory.  Output file name(s) default to same as input file
name(s), with ".pnt" suffix replaced by ".pkz", unless overridden by
the -o/--output option.
"""
# (Run with no args to see options)

import os, pnt, pickle, gzip, re, multifile, unbuffer
from error import Error

unbuffer.stdout()

def process_file(file, outfile, opts):
    if not opts.quiet: print "%s -> %s ..." % (file, outfile),
    pfile = pnt.PntFile(file)
    g = pnt.PntGrid()
    g.load_pntfile(pfile)
    with gzip.open(outfile, "wb") as f:
        pickle.dump(g, f)
        if not opts.quiet: print "done."

if __name__ == "__main__":
    try:
        parser = multifile.create_parser(__doc__)
        (opts, args) = parser.parse_args()
        multifile.main(parser, process_file,
                       lambda file : re.match(r'^.*\.pnt$', file),
                       lambda file : re.sub(r'\.pnt$', '.pkz', file),
                       args, opts)
    except Error as e:
        print "Error: %s" % e.message
